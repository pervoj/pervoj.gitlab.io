%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: vala
file_extensions:
  - vala
scope: source.vala
contexts:
  main:
    - match: ///
      captures:
        0: punctuation.definition.comment.source.vala
      push:
        - meta_scope: comment.block.documentation.source.vala
        - match: $\n?
          captures:
            0: punctuation.definition.comment.source.vala
          pop: true
        - match: "(</?)(?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+)"
          captures:
            1: punctuation.definition.tag.source.vala
            2: entity.name.tag.namespace.source.vala
            3: entity.name.tag.source.vala
            4: punctuation.separator.namespace.source.vala
            5: entity.name.tag.localname.source.vala
          push:
            - meta_scope: keyword.other.documentation.source.vala
            - match: (/?>)
              captures:
                1: punctuation.definition.tag.source.vala
                2: entity.name.tag.namespace.source.vala
                3: entity.name.tag.source.vala
                4: punctuation.separator.namespace.source.vala
                5: entity.name.tag.localname.source.vala
              pop: true
            - match: " (?:([-_a-zA-Z0-9]+)((:)))?([_a-zA-Z-]+)="
              captures:
                1: entity.other.attribute-name.namespace.source.vala
                2: entity.other.attribute-name.source.vala
                3: punctuation.separator.namespace.source.vala
                4: entity.other.attribute-name.localname.source.vala
            - include: doubleQuotedString
            - include: singleQuotedString
    - include: comments
    - match: |-
        (?x)^\s*
        ((?:\b(?:new|public|protected|internal|private|abstract|sealed|static)\b\s)*)
        (class)\s+
        ([A-Za-z_]\w+)\b
      captures:
        1: storage.modifier.source.vala
        2: storage.type.source.vala
        3: entity.name.type.class.source.vala
      push:
        - meta_scope: meta.definition.class.source.vala
        - match: "{"
          captures:
            1: storage.modifier.source.vala
            2: storage.type.source.vala
            3: entity.name.type.class.source.vala
          pop: true
        - include: classInheritance
    - match: \b(true|false|null|this|base)\b
      scope: constant.language.source.vala
    - match: '\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b'
      scope: constant.numeric.source.vala
    - match: \b(if|else|while|for|foreach|do|return|continue|break|switch|case|default|goto|throw|try|catch|finally|lock|yield|throws|requires|ensures)\b
      scope: keyword.control.source.vala
    - match: \b(var|new|is|typeof|sizeof|override|in|out|ref|params|as)\b
      scope: keyword.operator.source.vala
    - match: \b(delegate|in|set|get)\b
      scope: keyword.other.source.vala
    - match: \b(internal|public|protected|private|static|const|new|var|abstract|override|extern|async|inline|weak|unowned|owned|global|dynamic|volatile)\b
      scope: storage.modifier.source.vala
    - include: doubleQuotedStringLiteral
    - include: doubleQuotedString
    - include: singleQuotedString
    - match: '^\s*(using)\s+([^ ;]*);'
      scope: meta.keyword.using.source.vala
      captures:
        1: keyword.other.using.source.vala
        2: entity.name.type.package.source.vala
    - include: builtinTypes
    - match: '^\s*(namespace)\s+([^ ]+)(?:\s*{)?$'
      scope: meta.keyword.namespace.source.vala
      captures:
        1: keyword.other.namespace.source.vala
        2: entity.name.type.namespace.source.vala
    - match: ^(#)\s*(if|else|elif|endif|define|undef|warning|error|line|region|endregion)\b
      scope: meta.preprocessor.source.vala
      captures:
        2: keyword.control.import.source.vala
  builtinTypes:
    - match: \b(double|float|bool|char|uchar|short|ushort|int|uint|long|ulong|size_t|ssize_t|int8|uint8|int16|uint16|int32|uint32|int64|uint64|unichar|object|string|void|class|struct|enum|construct|interface|errordomain)\b
      scope: storage.type.source.vala
  classInheritance:
    - match: ":"
      push:
        - match: "(?={)"
          pop: true
        - match: '\s*,?([A-Za-z_]\w*)\b'
          captures:
            1: storage.type.source.vala
  comments:
    - match: /\*
      captures:
        0: punctuation.definition.comment.source.vala
      push:
        - meta_scope: comment.block.source.vala
        - match: \*/
          captures:
            0: punctuation.definition.comment.source.vala
          pop: true
    - match: (//).*$\n?
      scope: comment.line.double-slash.source.vala
      captures:
        1: punctuation.definition.comment.source.vala
  doubleQuotedString:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.source.vala
      push:
        - meta_scope: string.quoted.double.source.vala
        - match: '"'
          captures:
            0: punctuation.definition.string.end.source.vala
          pop: true
        - match: \\.
          scope: constant.character.escape.source.vala
  doubleQuotedStringLiteral:
    - match: '@"([^"]|"")*"'
      scope: string.quoted.double.literal.source.vala
      captures:
        0: punctuation.definition.string.begin.source.vala
  singleQuotedString:
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.source.vala
      push:
        - meta_scope: string.quoted.single.xml
        - match: "'"
          captures:
            0: punctuation.definition.string.end.source.vala
          pop: true
        - match: \\.
          scope: constant.character.escape.source.vala
  statementRemainder:
    - match: \(
      push:
        - meta_scope: meta.definition.param-list.source.vala
        - match: (?=\))
          pop: true
        - include: builtinTypes
